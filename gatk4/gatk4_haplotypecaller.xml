<tool id="gatk4_haplotypecaller" name="HaplotypeCaller" version="@VERSION@.0" profile="17.09">
    <description>HaplotypeCaller - Call germline SNPs and indels via local re-assembly of haplotypes</description>

    <macros>
        <import>macros.xml</import>
    </macros>

    @VERSION_CMD@

    <command detect_errors="exit_code"><![CDATA[
        #for $value, $interval in enumerate($intervals):
            ln -s ${interval} ${value}.interval_list &&
        #end for
        @CMD_BEGIN@ HaplotypeCaller
	    -I ${input}
	    -O ${output}
        #include source=$gatk_req_opts#
        #include source=$gatk_ival_opts#
        --emit-ref-confidence "${haplotypecaller_opt.emit_ref_confidence}"

    ]]></command>

    <inputs>
        <expand macro="bam_req_params"/>
        <expand macro="ref_sel"/>
        <expand macro="gatk_opt_params"/>
        <section name="haplotypecaller_opt" title="Optional Haplotype Caller Parameters" expanded="False">
            <param name="emit_ref_confidence" type="select" label="Reference Confidence Mode" help="Mode for emitting reference confidence scores.">
                <option value="NONE" selected="true">NONE</option>
                <option value="BP_RESOLUTION">BP_RESOLUTION</option>
                <option value="GVCF">GVCF</option>
            </param>
        </section>
        <section name="haplotypecaller_advanced" title="Advanced Haplotype Caller Parameters" expanded="False">
        </section>
    </inputs>

    <outputs>
        <data format="vcf" name="output" label="${tool.name} on ${on_string}: VCF"/>
    </outputs>

    <help><![CDATA[
        Call germline SNPs and indels via local re-assembly of haplotypes
        The HaplotypeCaller is capable of calling SNPs and indels simultaneously via local de-novo assembly of haplotypes
        in an active region. In other words, whenever the program encounters a region showing signs of variation, it discards
        the existing mapping information and completely reassembles the reads in that region. This allows the HaplotypeCaller
        to be more accurate when calling regions that are traditionally difficult to call, for example when they contain
        different types of variants close to each other. It also makes the HaplotypeCaller much better at calling indels than
        position-based callers like UnifiedGenotyper.

        n the GVCF workflow used for scalable variant calling in DNA sequence data, HaplotypeCaller runs per-sample to generate
        an integerermediate GVCF (not to be used in final analysis), which can then be used in GenotypeGVCFs for joint genotyping of
        multiple samples in a very efficient way. The GVCF workflow enables rapid incremental processing of samples as they roll
        off the sequencer, as well as scaling to very large cohort sizes (e.g. the 92K exomes of ExAC).

        In addition, HaplotypeCaller is able to handle non-diploid organisms as well as pooled experiment data. Note however that
        the algorithms used to calculate variant likelihoods is not well suited to extreme allele frequencies (relative to ploidy)
        so its use is not recommended for somatic (cancer) variant discovery. For that purpose, use Mutect2 instead.

        Finally, HaplotypeCaller is also able to correctly handle the splice junctions that make RNAseq a challenge for most
        variant callers, on the condition that the input read data has previously been processed according to our recommendations
        as documented here.
    ]]></help>

    <expand macro="citations" />

</tool>
