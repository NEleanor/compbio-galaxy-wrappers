<tool id="gatk4_collectmultiplemetrics" name="CollectMultipleMetrics" version="@VERSION@.0" profile="17.09">
    <description>- Collect multiple classes of metrics</description>

    <macros>
        <import>macros.xml</import>
    </macros>

    @VERSION_CMD@

    <command detect_errors="exit_code"><![CDATA[
        @CMD_BEGIN@ CollectMultipleMetrics
        -I ${input}
        -O 'OUTPUT'
        #if $dbsnp:
            --DB_SNP '${dbsnp}'
        #end if
        #if $intervals:
            --INTERVALS '${intervals}'
        #end if
        --PROGRAM 'null'
        #for $prog in str( $programs ).split( ',' ):
            --PROGRAM $prog
        #end for
        #include source=$bam_opt_opts#
    ]]></command>

    <inputs>
        <expand macro="bam_req_params" />
        <param name="intervals" type="data" format="txt" label="Interval List" optional="true" help="An optional list of intervals to restrict analysis to. Only pertains to some of the PROGRAMs.  For format of this file: http://samtools.github.io/htsjdk/javadoc/htsjdk/htsjdk/samtools/util/IntervalList.html" />
        <param name="dbsnp" type="data" format="vcf" label="dbSNP" optional="true" help="VCF format dbSNP file, used to exclude regions around known polymorphisms from analysis by some PROGRAMs." />
        <param name="programs" type="select" multiple="true" label="Metrics Program(s)" display="checkboxes" help="Set of metrics programs to apply during the pass through the SAM file.  This argument may be specified 0 or more times." >
            <option value="CollectAlignmentSummaryMetrics" selected="true">CollectAlignmentSummaryMetrics</option>
            <option value="CollectBaseDistributionByCycle" selected="true">CollectBaseDistributionByCycle</option>
            <option value="CollectGcBiasMetrics">CollectGcBiasMetrics</option>
            <option value="CollectInsertSizeMetrics" selected="true">CollectInsertSizeMetrics</option>
            <option value="CollectSequencingArtifactMetrics">CollectSequencingArtifactMetrics</option>
            <option value="CollectQualityYieldMetrics">CollectQualityYieldMetrics</option>
            <option value="MeanQualityByCycle" selected="true">MeanQualityByCycle</option>
            <option value="QualityScoreDistribution" selected="true">QualityScoreDistribution</option>
        </param>
        <expand macro="bam_opt_params" />
    </inputs>

    <outputs>
        <data format="txt" name="align_summ" label="${tool.name} on ${on_string}: CollectAlignmentSummaryMetrics METRICS" from_work_dir="OUTPUT.alignment_summary_metrics" >
            <filter>'CollectAlignmentSummaryMetrics' in str(programs)</filter>
        </data>
        <data format="txt" name="base_dist_txt" label="${tool.name} on ${on_string}: CollectBaseDistributionByCycle METRICS" from_work_dir="OUTPUT.base_distribution_by_cycle_metrics" >
            <filter>'CollectBaseDistributionByCycle' in str(programs)</filter>
        </data>
        <data format="pdf" name="base_dist_pdf" label="${tool.name} on ${on_string}: CollectBaseDistributionByCycle PDF" from_work_dir="OUTPUT.base_distribution_by_cycle.pdf" >
            <filter>'CollectBaseDistributionByCycle' in str(programs)</filter>
        </data>
        <data format="txt" name="gcbias_det_txt" label="${tool.name} on ${on_string}: CollectGcBiasMetrics DETAIL METRICS" from_work_dir="OUTPUT.gc_bias.detail_metrics" >
            <filter>'CollectGcBiasMetrics' in str(programs)</filter>
        </data>
        <data format="txt" name="gcbias_summ_txt" label="${tool.name} on ${on_string}: CollectGcBiasMetrics SUMMARY METRICS" from_work_dir="OUTPUT.gc_bias.summary_metrics" >
            <filter>'CollectGcBiasMetrics' in str(programs)</filter>
        </data>
        <data format="pdf" name="gcbias_pdf" label="${tool.name} on ${on_string}: CollectGcBiasMetrics PDF" from_work_dir="OUTPUT.gc_bias.pdf" >
            <filter>'CollectGcBiasMetrics' in str(programs)</filter>
        </data>
        <data format="txt" name="ins_size_txt" label="${tool.name} on ${on_string}: CollectInsertSizeMetrics METRICS" from_work_dir="OUTPUT.insert_size_metrics" >
            <filter>'CollectInsertSizeMetrics' in str(programs)</filter>
        </data>
        <data format="pdf" name="ins_size_pdf" label="${tool.name} on ${on_string}: CollectInsertSizeMetrics PDF" from_work_dir="OUTPUT.insert_size_histogram.pdf" >
            <filter>'CollectInsertSizeMetrics' in str(programs)</filter>
        </data>
        <data format="txt" name="seq_art_det_bait_txt" label="${tool.name} on ${on_string}: CollectSequencingArtifactMetrics BAIT BIAS DETAIL METRICS" from_work_dir="OUTPUT.bait_bias_detail_metrics" >
            <filter>'CollectSequencingArtifactMetrics' in str(programs)</filter>
        </data>
        <data format="txt" name="seq_art_summ_bait_txt" label="${tool.name} on ${on_string}: CollectSequencingArtifactMetrics BAIT BIAS SUMMARY METRICS" from_work_dir="OUTPUT.bait_bias_summary_metrics" >
            <filter>'CollectSequencingArtifactMetrics' in str(programs)</filter>
        </data>
        <data format="txt" name="seq_art_err_txt" label="${tool.name} on ${on_string}: CollectSequencingArtifactMetrics ERROR SUMMARY METRICS" from_work_dir="OUTPUT.error_summary_metrics" >
            <filter>'CollectSequencingArtifactMetrics' in str(programs)</filter>
        </data>
        <data format="txt" name="seq_art_adapt_det_txt" label="${tool.name} on ${on_string}: CollectSequencingArtifactMetrics PRE ADAPTER DETAIL METRICS" from_work_dir="OUTPUT.pre_adapter_detail_metrics" >
            <filter>'CollectSequencingArtifactMetrics' in str(programs)</filter>
        </data>
        <data format="txt" name="seq_art_adapt_summ_txt" label="${tool.name} on ${on_string}: CollectSequencingArtifactMetrics PRE ADAPTER SUMMARY METRICS" from_work_dir="OUTPUT.pre_adapter_summary_metrics" >
            <filter>'CollectSequencingArtifactMetrics' in str(programs)</filter>
        </data>
        <data format="txt" name="qual_yield_txt" label="${tool.name} on ${on_string}: CollectQualityYieldMetrics METRICS" from_work_dir="OUTPUT.quality_yield_metrics" >
            <filter>'CollectQualityYieldMetrics' in str(programs)</filter>
        </data>
        <data format="txt" name="qual_cyc_txt" label="${tool.name} on ${on_string}: MeanQualityByCycle METRICS" from_work_dir="OUTPUT.quality_by_cycle_metrics" >
            <filter>'MeanQualityByCycle' in str(programs)</filter>
        </data>
        <data format="pdf" name="qual_cyc_pdf" label="${tool.name} on ${on_string}: MeanQualityByCycle PDF" from_work_dir="OUTPUT.quality_by_cycle.pdf" >
            <filter>'MeanQualityByCycle' in str(programs)</filter>
        </data>
        <data format="txt" name="qual_dist_txt" label="${tool.name} on ${on_string}: QualityScoreDistribution METRICS" from_work_dir="OUTPUT.quality_distribution_metrics" >
            <filter>'QualityScoreDistribution' in str(programs)</filter>
        </data>
        <data format="pdf" name="qual_dist_pdf" label="${tool.name} on ${on_string}: QualityScoreDistribution PDF" from_work_dir="OUTPUT.quality_distribution.pdf" >
            <filter>'QualityScoreDistribution' in str(programs)</filter>
        </data>
    </outputs>

    <help><![CDATA[

    Collect multiple classes of metrics.  This 'meta-metrics' tool runs one or more of the metrics collection modules at the
    same time to cut down on the time spent reading in data from input files. Available modules include
    CollectAlignmentSummaryMetrics, CollectInsertSizeMetrics, QualityScoreDistribution,  MeanQualityByCycle,
    CollectBaseDistributionByCycle, CollectGcBiasMetrics, RnaSeqMetrics, CollectSequencingArtifactMetrics, and
    CollectQualityYieldMetrics. The tool produces outputs of '.pdf' and '.txt' files for each module, except for the
    CollectAlignmentSummaryMetrics module, which outputs only a '.txt' file. Output files are named by specifying a base
    name (without any file extensions).  Currently all programs are run with default options and fixed output
    extensions, but this may become more flexible in future. Specifying a reference sequence file is required.  Note:
    Metrics labeled as percentages are actually expressed as fractions!

    Usage example (all modules on by default):  gatk CollectMultipleMetrics -I input.bam -O multiple_metrics
    -R reference_sequence.fasta

    Usage example (two modules only):  gatk CollectMultipleMetrics -I input.bam -O multiple_metrics -R reference_sequence.fasta
    --PROGRAM null --PROGRAM QualityScoreDistribution --PROGRAM MeanQualityByCycle

    @PICARD_HELP@
    ]]></help>

    <expand macro="citations" />

</tool>