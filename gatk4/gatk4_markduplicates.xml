<tool id="gatk4_markduplicates" name="MarkDuplicates" version="@VERSION@.0" profile="17.09">
    <description>- MarkDuplicates (Picard) - Identifies duplicate reads</description>

    <macros>
        <import>macros.xml</import>
    </macros>

    @VERSION_CMD@

    <expand macro="requirements"/>

    <command detect_errors="exit_code"><![CDATA[
        @CMD_BEGIN@ MarkDuplicates
        #for $input in $inputs:
            -I "${input}"
        #end for
        -O ${output}
        --METRICS_FILE "${metrics_file}"
        #if $markduplicates_opt.assume_sort_order:
            --ASSUME_SORT_ORDER ${markduplicates_opt.assume_sort_order}
        #end if
        --DUPLICATE_SCORING_STRATEGY "${markduplicates_opt.duplicate_scoring_strategy}"
        --REMOVE_DUPLICATES "${markduplicates_opt.remove_duplicates}"
        --REMOVE_SEQUENCING_DUPLICATES "${markduplicates_opt.remove_sequencing_duplicates}"
        --OPTICAL_DUPLICATE_PIXEL_DISTANCE "${markduplicates_opt.optical_duplicate_pixel_distance}"
        #include source=$bam_opt_opts#
    ]]></command>

    <inputs>
        <param name="inputs" type="data_collection" collection_type="list" label="Input File(s)" format="bam" help="Input file(s) to be deduplicated." />
        <section name="markduplicates_opt" title="Other MarkDuplicates Parameters" expanded="False">
            <param name="assume_sort_order" type="select" label="Assume Sort Order" help="If not null, assume that the input file has this order even if the header says otherwise." >
                <option value="unsorted" selected="true">UNSORTED</option>
                <option value="queryname">QUERYNAME</option>
                <option value="coordinate">COORDINATE</option>
                <option value="duplicate">DUPLICATE</option>
                <option value="unknown">UNKNOWN</option>
            </param>
            <param name="duplicate_scoring_strategy" type="select" label="Duplicate Scoring Strategy" help="The scoring strategy for choosing the non-duplicate among candidates." >
                <option value="SUM_OF_BASE_QUALITIES" selected="true">SUM_OF_BASE_QUALITIES</option>
                <option value="TOTAL_MAPPED_REFERENCE_LENGTH">TOTAL_MAPPED_REFERENCE_LENGTH</option>
                <option value="RANDOM">RANDOM</option>
            </param>
            <param name="optical_duplicate_pixel_distance" type="integer" size="7" value="100" min="0" label="Optical Duplicate Pixel Distance" help="The maximum offset between two duplicate clusters in order to consider them optical duplicates. The default is appropriate for unpatterned versions of the Illumina platform. For the patterned flowcell models, 2500 is moreappropriate. For other platforms and models, users should experiment to find what works best." />
            <param name="remove_duplicates" type="boolean" label="Remove Duplicates?" checked="false" help="If true do not write duplicates to the output file instead of writing them with appropriate flags set." />
            <param name="remove_sequencing_duplicates" type="boolean" label="Remove Sequencing Duplicates?" checked="false" help="If true remove 'optical' duplicates and other duplicates that appear to have arisen from the sequencing process instead of the library preparation process, even if REMOVE_DUPLICATES is false. If REMOVE_DUPLICATES is true, all duplicates are removed and this option is ignored." />
        </section>
        <expand macro="bam_opt_params" />
    </inputs>

    <outputs>
        <expand macro="bam_req_params_output" />
        <data format="txt" name="metrics_file" label="${tool.name} on ${on_string}: METRICS"/>
    </outputs>

    <help><![CDATA[
    Identifies duplicate reads.  This tool locates and tags duplicate reads in a BAM or SAM file, where duplicate reads
    are defined as originating from a single fragment of DNA.  Duplicates can arise during sample preparation e.g. library
    construction using PCR.  See also https://broadinstitute.github.io/picard/command-line-overview.html#EstimateLibraryComplexity
    for additional notes on PCR duplication artifacts.  Duplicate reads can also result from a single amplification cluster,
    incorrectly detected as multiple clusters by the optical sensor of the sequencing instrument.  These duplication
    artifacts are referred to as optical duplicates.</p><p>The MarkDuplicates tool works by comparing sequences in the 5
    prime positions of both reads and read-pairs in a SAM/BAM file.  An BARCODE_TAG option is available to facilitate
    duplicate marking using molecular barcodes.  After duplicate reads are collected, the tool differentiates the primary
    and duplicate reads using an algorithm that ranks reads by the sums of their base-quality scores (default method).</p>
    <p>The tool's main output is a new SAM or BAM file, in which duplicates have been identified in the SAM flags field for
    each read.  Duplicates are marked with the hexadecimal value of 0x0400, which corresponds to a decimal value of 1024.
    If you are not familiar with this type of annotation, please see the following https://www.broadinstitute.org/gatk/blog?id=7019
    for additional information.

    Although the bitwise flag annotation indicates whether a read was marked as a duplicate, it does not identify the type of duplicate.
    To do this, a new tag called the duplicate type (DT) tag was recently added as an optional output in  the 'optional
    field' section of a SAM/BAM file.  Invoking the TAGGING_POLICY option, you can instruct the program to mark all the
    duplicates (All), only the optical duplicates (OpticalOnly), or no duplicates (DontTag).  The records within the output
    of a SAM/BAM file will have values for the 'DT' tag (depending on the invoked TAGGING_POLICY), as either
    library/PCR-generated duplicates (LB), or sequencing-platform artifact duplicates (SQ).  This tool uses the
    READ_NAME_REGEX and the OPTICAL_DUPLICATE_PIXEL_DISTANCE options as the primary methods to identify and differentiate
    duplicate types.  Set READ_NAME_REGEX to null to skip optical duplicate detection, e.g. for RNA-seq or other data where
    duplicate sets are extremely large and estimating library complexity is not an aim.  Note that without optical duplicate
    counts, library size estimation will be inaccurate.</p> <p>MarkDuplicates also produces a metrics file indicating the
    numbers of duplicates for both single- and paired-end reads.</p>  <p>The program can take either coordinate-sorted or
    query-sorted inputs, however the behavior is slightly different.  When the input is coordinate-sorted, unmapped mates of
    mapped records and supplementary/secondary alignments are not marked as duplicates.  However, when the input is
    query-sorted (actually query-grouped), then unmapped mates and secondary/supplementary reads are not excluded from the
    duplication test and can be marked as duplicate reads.

    If desired, duplicates can be removed using the
    REMOVE_DUPLICATE and REMOVE_SEQUENCING_DUPLICATES options.

    Usage example:gatk MarkDuplicates -I input.bam -O marked_duplicates.bam -M marked_dup_metrics.txt

    Please see http://broadinstitute.github.io/picard/picard-metric-definitions.html#DuplicationMetrics for
    detailed explanations of the output metrics.

    @PICARD_HELP@
    ]]></help>

    <expand macro="citations" />

</tool>
