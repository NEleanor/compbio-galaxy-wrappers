<tool id="gatk2_realigner_target_creator_basic" name="Realigner Target Creator Basic" version="3.2.1">
  <description>for use in local realignment</description>
  <requirements>
    <requirement type="package" version="0.1.19">samtools</requirement>
    <requirement type="package" version="3.7">gatk</requirement>
  </requirements>
  <command detect_errors="exit_code"><![CDATA[

  #if $input.is_of_type("bam")
    ln -s $input input.bam &&
    samtools index input.bam &&
  #else
    ln -s $input input.sam &&
    samtools view -bS input.sam -o input.bam &&
    samtools index input.bam &&
  #end if
 
  #if str($ival_type.ival_type_sel) == "ival_file"
    #if $ival_type.intervals
      #if $ival_type.intervals.is_of_type("gatk_interval")
        ln -s $ival_type.intervals intervals.interval_list &&
      #end if
      #if $ival_type.intervals.is_of_type("picard_interval_list")
        ln -s $ival_type.intervals intervals.interval_list &&
      #end if
      #if $ival_type.intervals.is_of_type("bed")
        ln -s $ival_type.intervals intervals.bed &&
      #end if
      #if $ival_type.intervals.is_of_type("vcf")
        ln -s $ival_type.intervals intervals.vcf.gz &&
        tabix intervals.vcf.gz &&
      #end if
    #end if
  #end if

  gatk
  -T "RealignerTargetCreator"
  -o "${output_interval}"
  --input_file input.bam

  #if $reference_source.reference_source_selector != "no_ref"
    #if $reference_source.reference_source_selector != "history"
      --reference_sequence ${reference_source.reference_sequence.fields.path}
    #else
      --reference_sequence ${reference_source.reference_sequence}
    #end if
  #end if

  #if str($ival_type.ival_type_sel) == "ival_file"
      #if $ival_type.intervals
          #if $ival_type.intervals.is_of_type("gatk_interval")
              --intervals intervals.interval_list
          #end if
          #if $ival_type.intervals.is_of_type("picard_interval_list")
              --intervals intervals.interval_list
          #end if
          #if $ival_type.intervals.is_of_type("bed")
              --intervals intervals.bed
          #end if
          #if $ival_type.intervals.is_of_type("vcf")
              --intervals intervals.vcf.gz
          #end if
      #end if
  #else
      #if $ival_type.intervals
          --intervals "${ival_type.intervals}"
      #end if
  #end if
  #if $ival_type.interval_padding
      --interval_padding "${ival_type.interval_padding}"
  #end if
 

  ]]></command>
  <inputs>
    <param name="input" type="data" format="bam,sam" label="Input BAM/SAM/CRAM file" />
    <conditional name="reference_source">
      <param name="reference_source_selector" type="select" label="Choose the source for the reference list">
        <option value="cached">Locally cached</option>
        <option value="history">History</option>
        <option value="no_ref" selected="true">Do not pass</option>
      </param>
      <when value="cached">
        <param name="reference_sequence" type="select" label="Reference" help="Reference sequence file." >
          <options from_data_table="all_fasta" >
            <validator type="no_options" message="A built-in reference genome is not available for the build associated with the selected input file" />
          </options>
        </param>
      </when>
      <when value="history">
        <param name="reference_sequence" type="data" format="fasta" label="Reference" help="Reference sequence file." />
      </when>
    </conditional>

    <conditional name="ival_type">
      <param name="ival_type_sel" type="select" label="Choose Genomic Interval Source">
        <option value="ival_file" selected="true">Interval File</option>
        <option value="ival_text" selected="false">Interval Text Input</option>
      </param>
      <when value="ival_file">
        <param name="intervals" argument="--intervals" type="data" optional="true" format="bed,vcf,gatk_interval,picard_interval_list" label="Intervals File" help="One or more genomic intervals over which to operate"/>
        <param name="interval_padding" argument="--interval-padding" type="integer" optional="true" value="0" label="Interval Padding" help="Amount of padding (in bp) to add to each interval you are including."/>
      </when>
      <when value="ival_text">
        <param name="intervals" argument="--intervals" type="text" optional="true" label="Intervals Text Input" help="One or more genomic intervals over which to operate.  Enter in chrom:start-stop format."/>
        <param name="interval_padding" argument="--interval-padding" type="integer" optional="true" value="0" label="Interval Padding" help="Amount of padding (in bp) to add to each interval you are including."/>
      </when>
    </conditional>
  </inputs>
  <outputs>
    <data format="gatk_interval" name="output_interval" label="${tool.name} on ${on_string} (GATK intervals)" />
  </outputs>

  <tests></tests>
  <help>
**What it does**

Emits intervals for the Local Indel Realigner to target for cleaning.  Ignores 454 reads, MQ0 reads, and reads with consecutive indel operators in the CIGAR string.

For more information on local realignment around indels using the GATK, see this `tool specific page &lt;http://www.broadinstitute.org/gatk/gatkdocs/org_broadinstitute_sting_gatk_walkers_indels_RealignerTargetCreator.html&gt;`_.

To learn about best practices for variant detection using GATK, see this `overview &lt;http://www.broadinstitute.org/gatk/guide/topic?name=best-practices&gt;`_.

If you encounter errors, please view the `GATK FAQ &lt;http://www.broadinstitute.org/gatk/guide/topic?name=faqs&gt;`_.

------

**Inputs**

GenomeAnalysisTK: RealignerTargetCreator accepts an aligned BAM input file.


**Outputs**

The output is in GATK Interval format.


Go `here &lt;http://www.broadinstitute.org/gatk/guide/topic?name=intro&gt;`_ for details on GATK file formats.

-------

**Settings**::

 windowSize          window size for calculating entropy or SNP clusters
 mismatchFraction    fraction of base qualities needing to mismatch for a position to have high entropy; to disable set to &lt;= 0 or &gt; 1
 minReadsAtLocus     minimum reads at a locus to enable using the entropy calculation
 maxIntervalSize     maximum interval size
  </help>
</tool>
