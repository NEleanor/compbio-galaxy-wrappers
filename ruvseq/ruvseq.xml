<tool id='ruvseq' name='RUVSeq' version='1.0.0'>
    <description>RUV: Removal of Unwanted Variation</description>    

    <requirements>
      <requirement type="package" version="2.0.1">argparse</requirement>
      <requirement type="package" version="3.1.1">ggplot2</requirement>
      <requirement type="package" version="1.16.1">RUVSeq</requirement>
    </requirements>
    
    <command detect_errors="exit_code"><![CDATA[        
        Rscript $__tool_directory__/ruvseq.R 
          --mat "${input}"
        #if $includeBCCL
          --includeBCCL
        #end if
          --ctrlregex '$ctrlregex'
          --sampregex '$sampregex'
          --filtperc "${filtperc}"
          --mincnt "${mincnt}"
          --normtype "${normtype}"
          --setk "${setk}"
    ]]></command>
    
    <inputs>
        <param name="input" format="tabular" type="data" label="input table" help="data matrix"/>
        <param name="includeBCCL" type="select" value="FALSE" multiple="false" label="includeBCCL: boolean indicating whether data includes breast cell lines with replicates." help="">
            <option value="FALSE">FALSE</option>
            <option value="TRUE">TRUE</option>
        </param>
        <param name="ctrlregex" type="text" value="*UHR*" label="Regex of replicates/controls: Pattern match sample names indicating replicates or controls." help="Percent of samples (Percent filter) matching regex pattern (Regex for filtering) with counts greater than minimum counts (Minimum counts)."/>
        <param name="sampregex" type="text" value="*" label="Regex for filtering: " help=""/>
        <param name="filtperc" type="integer" value="10" label="Percent filter" help=""/>
        <param name="mincnt" type="integer" value="3" label="Minimum count" help=""/>
        <param name="normtype" type="select" multiple="false" label="Normalization type" help="If counts are given use CPM. If TPM are give then use NONE">
          <option value="NONE">NONE</option>
          <option value="CPM">CPM</option>
        </param>
        <param name="setk" type="integer" value="1" label="k" help="Number of factors to remove during factor analysis."/> 
    </inputs>

    <outputs>
        <data name="normRUV" format="txt" from_work_dir="normRUV.txt" label="norm ${tool.name} on ${on_string}"/>
        <data name="ruv_plots" format="pdf" from_work_dir="normalization_plots.pdf" label="ruv_plots ${tool.name} on ${on_string}"/>
    </outputs>

    <help><![CDATA[

Runs Davide Risso's version of RUVseq optimized for RNAseq normalized counts
is just the weights from factor analysis removed from observed variables(genes).
Not an ideal way to perform factor analysis or perform RUV analysis.

If includeBCCL=T, reccommend count matrix, use filtperc=10, mincnt = 10, normtype=CPM, setk=7.
If includeBCCL=F, reccommend TPM matrix, use filtperc=10, mincnt = 3, normtype=NONE, setk=1.

Currently wrapped around RUVs,
Risso et.al. Nature Biotechnology volume 32, (2014)

Inputs:
1.  mat=matrix 
2.  includeBCCL = TRUE/FALSE, whether you're data includes the BCCL data 
with replicates: SkBr3, T47D, HCC1954.
3.  ctrlregex = regexpr that repeats are based off. ie. \"*UHR*\"
4.  sampregex = regexpr for samples to filter on. */*16113*/NS500642|NS500681|NB551673
5.  filtperc: minimum number of samples with counts/tpm/rpkm less that
filt_cnt filtered out.
6.  mincnt: minimum number of counts/tpm/rpkm to be filtered out
7.  normalization prior to RUV. CPM=counts per million, NONE=no normalization
8.  number of factors to remove


    ]]></help>

</tool>
