<tool id="star_fusion" name="STAR-Fusion" version="@VERSION@.1" profile="17.01">
    <description>detect fusion genes in RNA-Seq data</description>

    <macros>
        <import>macros.xml</import>
    </macros>

    <expand macro="requirements"/>

    <stdio>
        <regex match="command not found" source="stderr" level="fatal"/>
        <regex match="EXITING because of INPUT ERROR" source="stderr" level="fatal"/>
        <regex match="FATAL ERROR" source="stderr" level="fatal"/>
        
        <regex match="Warning:" source="stderr" level="warning"/>
        <regex match="CMD:" source="stderr" level="warning"/>
        
        <regex match="-done creating index file:" source="stderr" level="warning"/>
        <regex match="-parsing GTF file:" source="stderr" level="warning"/>
        <regex match="-building interval tree" source="stderr" level="warning"/>
        <regex match="-parsing fusion evidence:" source="stderr" level="warning"/>
        <regex match="-mapping reads to genes" source="stderr" level="warning"/>
        <regex match="-outputting fusion candidates to file:" source="stderr" level="warning"/>
        
        <regex match="Process complete" source="stderr" level="warning"/>
    </stdio>

    <version_command>STAR-Fusion --version</version_command>

    <command><![CDATA[
        ## 1. Create genome reference library
        #if $genome_lib_type.genome_lib_type_selector == "build_lib":        
            prep_genome_lib.pl
                --genome_fa '${genome_lib_type.fasta_type.ownFile.fields.path}'
                --gtf '${geneModel}'
                --fusion_annot_lib ${fusion_annot_lib}
                --annot_filter_rule ${annot_filter_rule}
                --pfam_db ${pfam_db}
                #if $gmap_build:
                --gmap_build ${gmap_build}
                #end if           
                --CPU \${GALAXY_SLOTS:-1}
                #if $genome_lib_type.max_readlength:
                --max_readlength ${genome_lib_type.max_readlength}
                #end if
            &&
        #end if

        ## 2. Link in fastq files so they have appropriate extensions
        #if $input_params.left_fq:
            #if $input_params.left_fq.is_of_type("fastq.gz"):
                #set read1 = 'input_1.fastq.gz'
            #else:
                #set read1 = 'input_1.fastq'
            #end if
            ln -f -s $input_params.left_fq $read1 &&

        #end if

        #if $input_params.right_fq:
            #if $input_params.right_fq.is_of_type("fastq.gz"):
                #set read2 = 'input_2.fastq.gz'
            #else:
                #set read2 = 'input_2.fastq'
            #end if
            ln -f -s $input_params.right_fq $read2 &&
        #end if
        
        ## 3. Run STAR-Fusion
	    STAR-Fusion
            #if str($input_params.input_source) == "use_chimeric":
                --chimeric_junction '${input_params.chimeric_junction}'
            #end if

            #if $input_params.left_fq:
            --left_fq ${read1}
            #end if
    
            #if $input_params.right_fq:
            --right_fq ${read2}
            #end if

	    #if $genome_lib_type.genome_lib_type_selector == "build_lib":
	    --genome_lib_dir "\$(pwd)/ctat_genome_lib_build_dir"
	    #else if $genome_lib_type.genome_lib_type_selector == "prebuilt":
	    --genome_lib_dir ${genome_lib_type.prebuilt_lib.fields.path}
	    #end if

        #if str($params.settingsType) == "full":
            #if $params.examine_coding_effect:
            --examine_coding_effect
            #end if
            #if $params.FusionInspector != "None":
            --FusionInspector ${params.FusionInspector}
            #end if
            #if $params.no_annotation_filter:
            --no_annotation_filter
            #end if
            --min_junction_reads $params.min_junction_reads
            --min_sum_frags $params.min_sum_frags
            --max_promiscuity $params.max_promiscuity
            --min_novel_junction_support $params.min_novel_junction_support
            --min_alt_pct_junction $params.min_alt_pct_junction
            --aggregate_novel_junction_dist $params.aggregate_novel_junction_dist
        #end if
    ]]></command>

    <inputs>
        <conditional name="input_params">
            <param name="input_source"
                   type="select"
                   label="Use output from earlier STAR run or let STAR Fusion control running STAR">
                <option value="use_chimeric">Use output from earlier STAR</option>
                <option value="use_fastq">Let STAR Fusion control running STAR</option>
            </param>
            <when value="use_chimeric">
                <param name="chimeric_junction"
                       type="data"
                       format="interval"
                       argument="--chimeric_junction"
                       label="Chimeric junction file from STAR (with STAR-Fusion settings)"/>
                <param name="left_fq"
                       type="data"
                       format="fastq,fastqsanger,fastqsanger.gz"
                       optional="true"
                       argument="--left_fq"
                       label="left.fq file"
                       help=" include the left and right fastqs with the Chimeric.out.junction in order to compute the FFPM (normalized fusion fragments per million total rna-seq fragments) values in your summary report. Otherwise, you'll just get evidence fragment counts without the normalized values."/>
                <param name="right_fq"
                       type="data"
                       optional="true"
                       format="fastq,fastqsanger,fastqsanger.gz"
                       argument="--right_fq"
                       label="right.fq file"/>
            </when>

            <when value="use_fastq">
                <param name="left_fq"
                       type="data"
                       format="fastq,fastqsanger,fastqsanger.gz"
                       argument="--left_fq"
                       label="left.fq file"/>
                <param name="right_fq"
                       type="data"
                       format="fastq,fastqsanger,fastqsanger.gz"
                       optional="true"
                       argument="--right_fq"
                       label="right.fq file (actually optional, but highly recommended)"/>
            </when>
        </conditional>

	<!-- Genome source. -->
	<conditional name="genome_lib_type">
            <param name="genome_lib_type_selector" type="select" label="Genome library source">
	        <option value="prebuilt">Pre-built library</option>
		<option value="build_lib">Build Library</option>
            </param>
	    <when value="build_lib">
	        <conditional name="fasta_type">
                    <param name="fasta_type_selector" type="select" label="Source for sequence to search">
                        <option value="cached">Locally Cached sequences</option>
                        <option value="history" selected="true">Sequences from your history</option>
                    </param>
                    <when value="cached">
                        <param name="ownFile"
                            type="select" label="Genome to search">
                            <options from_data_table="all_fasta">
                                <validator type="no_options" message="A built-in reference genome is not available for the build associated with the selected input file."/>
                            </options>
                        </param>
                    </when>
                    <when value="history">
                        <param name="ownFile"
                               type="data"
                               format="fasta"
                               label="Select the reference genome (FASTA file)"/>
                    </when>
                </conditional>
       
               <param name="geneModel"
                   type="data"
                   format="gff3,gtf"
                   label="Gene model (gff3,gtf) file for splice junctions and fusion gene detection"/>
                <param name="fusion_annot_lib" type="data" format="txt,tsv,tabular" label="Fusion Annotation Library"/>
                <param name="annot_filter_rule" type="data" format="txt" optional="true" label="Target AnnotFilerRule.pm"/>
                <param name="pfam_db" type="data" format="txt,tsv,tabular" optional="true" label="PFAM Database"/>
                <param name="gmap_build" type="data" format="txt,tsv,tabular" optional="true" label="GMAP Build"/>
                <param name="max_readlength" type="integer" optional="true" label="Maximum Read Length"/>
 	    </when>
            <when value="prebuilt">
                <param name="prebuilt_lib" type="select" label="Genome library to search">
		    <options from_data_table="star_fusion_genome_lib">
                        <validator type="no_options" message="A pre-built STAR-fusion genome library is not available for the build associated with the selected input file"/>
		    </options>
		</param>
	    </when>
	</conditional>
       
        <conditional name="params">
            <param name="settingsType" type="select" label="Settings to use" help="You can use the default settings or set custom values for any STAR Fusion parameter.">
                <option value="default" selected="true">Use Defaults</option>
                <option value="full">Full parameter list</option>
            </param>
            <when value="default" />
            <when value="full"><!-- Full/advanced params. -->
                <param name="examine_coding_effect" type="boolean" checked="false" label="explore impact of fusions on coding sequences"/>
                <param name="no_annotation_filter" type="boolean" checked="false" label="exclude filtering of fusion predictions"/>
                <param name="FusionInspector" type="select" label="FusionInspector">
                    <option value="None">None</option>
                    <option value="inspect">Inspect</option>
                    <option value="validate">Validate</option>
                </param>
                <param name="min_junction_reads"
                       type="integer" value="1"
                       label="minimum number of junction-spanning reads required."
                       argument="--min_junction_reads"/>
                <param name="min_sum_frags"
                       type="integer"
                       value="2"
                       label="minimum fusion support = (#junction_reads + #spanning_frags)"
                       argument="--min_sum_frags"/>
                <param name="max_promiscuity"
                       type="integer"
                       value="3"
                       label="maximum number of partners allowed for a given fusion"
                       argument="--max_promiscuity"/>
                <param name="min_novel_junction_support"
                       type="integer"
                       value="3"
                       label="minimum of 3 junction reads required if breakpoint lacks involvement of only reference junctions"
                       argument="--min_novel_junction_support"/>
                <param name="min_alt_pct_junction"
                       type="float"
                       value="10"
                       label="10% of the dominant isoform junction support"
                       argument="--min_alt_pct_junction"/>
                <param name="aggregate_novel_junction_dist"
                       type="integer"
                       value="5"
                       label="non-ref junctions within 5 are merged into single calls"
                       argument="--aggregate_novel_junction_dist"/>
            </when>
        </conditional>
    </inputs>

    <outputs>
        <data format="tabular" name="output_predictions" label="${tool.name} on ${on_string}: PREDICTIONS" from_work_dir="STAR-Fusion_outdir/star-fusion.fusion_predictions.tsv"/>
	<data format="tabular" name="output_predictions_abridged" label="${tool.name} on ${on_string}: PREDICTIONS ABRIDGED" from_work_dir="STAR-Fusion_outdir/star-fusion.fusion_predictions.abridged.tsv"/>
        <data format="tabular" name="pre_blast_filt_info" label="${tool.name} on ${on_string}: PRE BLAST FILT INFO" from_work_dir="STAR-Fusion_outdir/star-fusion.preliminary/star-fusion.filter.intermediates_dir/star-fusion.pre_blast_filter.filt_info"/>
    </outputs>

    <tests>
        <test>
            <param name="input_source" value="use_chimeric" />
            <param name="chimeric_junction" ftype="interval" value="test1.tabular" />
            <param name="fasta_type_selector" value="history" />
            <param name="ownFile" ftype="fasta" value="test1.fa" />
            <param name="geneModel" ftype="gtf" value="test1.gtf" />
            <param name="blast_pairs" ftype="tabular" value="test1-test1.blastn.tabular" />
            <param name="settingsType" value="default" />
            
            <!-- Last column of the results contains data in a random order so exact matching is not feasible -->
            <output name="output_predictions">
                <assert_contents>
                    <has_line line="#fusion_name&#009;JunctionReads&#009;SpanningFrags&#009;Splice_type&#009;LeftGene&#009;LeftBreakpoint&#009;RightGene&#009;RightBreakpoint&#009;JunctionReads&#009;SpanningFrags" />
                    <has_text text="GENE1--GENE2&#009;24&#009;0&#009;INCL_NON_REF_SPLICE&#009;GENE1^GENE1&#009;chr1:240:+&#009;GENE2^GENE2&#009;chr2:241:+" />
                </assert_contents>
            </output>
        </test>
        <test>
            <param name="input_source" value="use_fastq" />
            <param name="left_fq" ftype="fastqsanger" value="test1.fastqsanger"/>
            <param name="fasta_type_selector" value="history" />
            <param name="ownFile" ftype="fasta" value="test1.fa" />
            <param name="geneModel" ftype="gtf" value="test1.gtf" />
            <param name="blast_pairs" ftype="tabular" value="test1-test1.blastn.tabular" />
            <param name="settingsType" value="default" />
            
            <!-- Last column of the results contains data in a random order so exact matching is not feasible -->
            <output name="output_predictions">
                <assert_contents>
                    <has_line line="#fusion_name&#009;JunctionReads&#009;SpanningFrags&#009;Splice_type&#009;LeftGene&#009;LeftBreakpoint&#009;RightGene&#009;RightBreakpoint&#009;JunctionReads&#009;SpanningFrags" />
                    <has_text text="GENE1--GENE2&#009;24&#009;0&#009;INCL_NON_REF_SPLICE&#009;GENE1^GENE1&#009;chr1:240:+&#009;GENE2^GENE2&#009;chr2:241:+" />
                </assert_contents>
            </output>
        </test>
        <test>
            <param name="input_source" value="use_fastq" />
            <param name="left_fq" ftype="fastqsanger.gz" value="test1.fastqsanger.gz"/>
            <param name="fasta_type_selector" value="history" />
            <param name="ownFile" ftype="fasta" value="test1.fa" />
            <param name="geneModel" ftype="gtf" value="test1.gtf" />
            <param name="blast_pairs" ftype="tabular" value="test1-test1.blastn.tabular" />
            <param name="settingsType" value="default" />
            
            <!-- Last column of the results contains data in a random order so exact matching is not feasible -->
            <output name="output_predictions">
                <assert_contents>
                    <has_line line="#fusion_name&#009;JunctionReads&#009;SpanningFrags&#009;Splice_type&#009;LeftGene&#009;LeftBreakpoint&#009;RightGene&#009;RightBreakpoint&#009;JunctionReads&#009;SpanningFrags" />
                    <has_text text="GENE1--GENE2&#009;24&#009;0&#009;INCL_NON_REF_SPLICE&#009;GENE1^GENE1&#009;chr1:240:+&#009;GENE2^GENE2&#009;chr2:241:+" />
                </assert_contents>
            </output>
        </test>
    </tests>
    <help>
**What it does**

STAR-Fusion is a component of the Trinity Cancer Transcriptome Analysis Toolkit (CTAT). STAR-Fusion uses the STAR aligner to identify candidate fusion transcripts supported by Illumina reads. STAR-Fusion further processes the output generated by the STAR aligner to map junction reads and spanning reads to a reference annotation set. This tool takes a long time to run because it is building the STAR index on the fly. We can fix this later. 

**Input: files required to run STAR-Fusion**
 - A genome reference sequence (FASTA-format)
 - A corresponding protein-coding gene annotation set (GTF/GFF Format)
 - A last-matching gene pairs file - in Galaxy you can create such files with the *ncbi_blast_plus* tool suite containing *blastn*: https://toolshed.g2.bx.psu.edu/view/devteam/ncbi_blast_plus
 - A STAR chimeric/junction output file - this is optional as STAR Fusion can control running STAR as well.

The authors of STAR Fusion have made some of these files avaialble at: https://data.broadinstitute.org/Trinity/CTAT_RESOURCE_LIB/. The gene annotations in each case are restricted to the protein-coding and lincRNA transcripts.
More info: https://github.com/STAR-Fusion/STAR-Fusion/wiki

    </help>

    <citations>
        <citation type="bibtex">
           @unpublished{star_fusion,
              author = {Brian Haas and Nicolas Stransky and Daniel Nicorici}, 
              title  = {STAR-Fusion},
              url    = {https://github.com/STAR-Fusion/STAR-Fusion}
            }
        </citation>
    </citations>
</tool>
